name: Build, Test, and Deploy Docker Image

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
    tags:
      - '*'
  pull_request:
    branches:
      - main  # Trigger on pull request to main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12-dind  # Docker-in-Docker service
        options: --privileged
    env:
      MYSQL_DATABASE: 'easynotes'
      MYSQL_USER: 'dbuser'
      MYSQL_PASSWORD: 'password2023'
      IMAGE_NAME: 'easy-notes'
      VERSION_TAG: 'latest'
    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker Buildx for advanced Docker builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to GitHub Container Registry (GHCR)
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      # Convert the repository name to lowercase
      - name: Convert repository name to lowercase
        id: convert_repo
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # Build the Docker image
      - name: Build the Docker image
        run: |
          docker build -t ghcr.io/${{ env.REPO_NAME }}/$IMAGE_NAME:$VERSION_TAG .
          docker save -o $IMAGE_NAME.tar ghcr.io/${{ env.REPO_NAME }}/$IMAGE_NAME:$VERSION_TAG

      # Run tests
      - name: Run tests
        run: |
          # Create Docker network for containers to communicate
          docker network create net-easynotes

          # Start MySQL container
          docker run -d --name mysql-container --network net-easynotes \
            -e MYSQL_ROOT_PASSWORD=root \
            -e MYSQL_DATABASE=$MYSQL_DATABASE \
            -e MYSQL_USER=$MYSQL_USER \
            -e MYSQL_PASSWORD=$MYSQL_PASSWORD \
            mysql:latest

          # Wait for MySQL to initialize
          sleep 30

          # Start EasyNotes container and connect it to the database
          docker run -d --name easy-notes-container --network net-easynotes \
            -e MYSQL_DATABASE=$MYSQL_DATABASE \
            -e MYSQL_USER=$MYSQL_USER \
            -e MYSQL_PASSWORD=$MYSQL_PASSWORD \
            ghcr.io/${{ env.REPO_NAME }}/$IMAGE_NAME:$VERSION_TAG

          # Test the application with curl
          docker run -d --name easynotes-test --network net-easynotes alpine:latest /bin/sh -c "sleep infinity"
          docker exec easynotes-test /bin/sh -c "apk add --no-cache curl"
          docker exec easynotes-test curl http://easy-notes-container:8080 -f || exit 1

          # Clean up containers and network
          docker stop easy-notes-container mysql-container easynotes-test
          docker rm easy-notes-container mysql-container easynotes-test
          docker network rm net-easynotes
      # Push Docker image to GitHub Container Registry
      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ env.REPO_NAME }}/$IMAGE_NAME:$VERSION_TAG
          docker push ghcr.io/${{ env.REPO_NAME }}/$IMAGE_NAME:latest

      # Log out from GitHub Container Registry
      - name: Logout from GHCR
        run: docker logout ghcr.io

