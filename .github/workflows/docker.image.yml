name: Build, Test, and Push Docker Image

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull request to main

jobs:
  build-test-and-push:
    runs-on: ubuntu-latest
    env:
      MYSQL_DATABASE: 'easynotes'
      MYSQL_USER: 'dbuser'
      MYSQL_PASSWORD: 'password2023'
    
    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker Buildx (for advanced Docker build)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to GitHub Container Registry (GHCR)
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      # Build the Docker image
      - name: Build the Docker image
        run: |
          docker build -t ghcr.io/tambinos/easy-notes:latest .

      # Run the Docker container to test if it works
      - name: Run Docker container and test
        run: |
          # Create a network for communication between containers
          docker network create net-easynotes

          # Pull the latest MySQL image and start a MariaDB container for the test
          docker pull mysql:latest
          docker run --name mysql-container -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=$MYSQL_DATABASE -e MYSQL_USER=$MYSQL_USER -e MYSQL_PASSWORD=$MYSQL_PASSWORD -d mysql

          # Import the SQL dump into the MySQL database (if applicable)
          docker exec -i mysql-container mysql -u $MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE < $(pwd)/easy-notes-dump.sql

          # Start the EasyNotes container in the background and connect it to the created network
          docker run -d --name easy-notes-container --network net-easynotes ghcr.io/tambinos/easy-notes:latest

          # Wait for the container to initialize (adjust timing if needed)
          sleep 15

          # Test if the application works using curl
          docker run --rm --network net-easynotes curlimages/curl:latest -f http://easy-notes-container:8080

          # Clean up: Stop and remove the containers after testing
          docker stop easy-notes-container mysql-container
          docker rm easy-notes-container mysql-container
          docker network rm net-easynotes

      # Push the image to GHCR
      - name: Push the Docker image to GHCR
        run: |
          docker push ghcr.io/tambinos/easy-notes:latest

